{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","postsBlock","posts","item","descriptionBlock","Post","props","react_default","a","createElement","className","sty","src","message","likescount","MyPosts","React","memo","postsElements","map","post","Post_Post","st","PostAddingReduxForm","onSubmit","values","adduserpost","posttext","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","newtextpost","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","undefined","Preloader","photos","large","ProfileInfo_ProfileStatusWithHooks","Profile","ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","compose","isAuth","auth","authorizedUserId","userId","getUserProfile","getStatus","withRouter","Component","componentDidMount","this","match","params","history","push","render","Profile_Profile","assign"],"mappings":"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","file":"static/js/3.49e786ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2420H\",\"posts\":\"MyPosts_posts__3A2Ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__HJRXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3TmxL\"};","import React from 'react';\r\nimport sty from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={sty.item}>\r\n          <img src='https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n          {props.message}\r\n          <div>Like {props.likescount}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport st from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post message={post.message} likescount={post.likescount}/>);\r\n\r\n    let adduserpost = (values) => {\r\n        debugger;\r\n        props.adduserpost(values.posttext);\r\n    }\r\n    return (\r\n        <div className={st.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <PostAddingReduxForm onSubmit={adduserpost}/>\r\n            <div className={st.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet PostAddingForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name='posttext' validate={[required,maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add Post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet PostAddingReduxForm = reduxForm({\r\n    form: 'postadding'\r\n})(PostAddingForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newtextpost\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adduserpost: (posttext) => {\r\n            debugger;\r\n            dispatch(addPostActionCreator(posttext));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React,{useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n    useEffect(\r\n        () => {\r\n            setStatus(props.status)\r\n        },\r\n        [props.status]\r\n    );\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport a from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if(profile == null || profile == undefined){\r\n        return <Preloader />\r\n    }\r\n    else {\r\n        return <div>\r\n            <div>\r\n                {/*<img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>*/}\r\n            </div>\r\n            <div className={a.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport a from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        profile:state.profilePage.profile,\r\n        status:state.profilePage.status,\r\n        isAuth:state.auth.isAuth,\r\n        authorizedUserId:state.auth.userId,\r\n    }\r\n)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile,getStatus,updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}